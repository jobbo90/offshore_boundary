# main = paste0(q), xlab = 'date', ylab = 'coastline position [m]')
# points(as.Date(subsets3$DATE_ACQUIRED)[which(rosner(subsets3$coastDist, min_Std, min_obs_rosner) == 0)],
# subsets3$coastDist[which(rosner(subsets3$coastDist, min_Std, min_obs_rosner) == 0)],
# col = 'red')
}
suppressWarnings(remove(subsets3, indexs, reference_date,
selectedDates, nearestDate, index_nearest,
subsets3_recal))
end <- Sys.time()
dif<- difftime(end, start, "mins")
print(paste0(as.Date(i) ,' in ', round(dif,1), ' in ', units(dif)))
}
#'
#'  calculate slope of coastline change
#'  - Per year
#'  - include nearest observations
#'  -
#'  within predefined search window (4 years difference max)
#'
for(i in group_dates){
start <- Sys.time()
for(q in group_pos){
# i<-group_dates[group_dates == c("1987-01-01")]
#
# q <- group_pos[group_pos == 91000]
# print(q)
subsets_annual <- mudbanks[which(mudbanks$year_col == i &
mudbanks$pos == q &
mudbanks$coastDist > -1), ]
# select outliers & non outliers
outliers <- subset(subsets_annual, coast_outlier == 0)
nonOutliers <- subset(subsets_annual, coast_outlier == 1)
# get nearest observation and add it to the list
# if there is nothing there; half way through the year
reference_date <- as.Date(ifelse(nrow(nonOutliers)>0,
mean(as.Date(nonOutliers$DATE_ACQUIRED)),
as.Date(i)+days(180)))
# improvement required!
# slope is only applicable if quality of coastline estimate is
# sufficient (see landsat 7 case with no data in wetland areas)
# if outlier detection is sufficient the slope can be correctly estimated
# if  there is insufficient observations;
# search for additional observations to calculate the slope
# downside; if the observations that are detected are of good quality,
# the slope is wronfully adjusted based on neighbouring observations
# resulting in wrong estimate (often underestimate!) of rate of change.
maxAttemp <- 0
while(nrow(nonOutliers) < 8 &
maxAttemp < min_obs_rosner){
# exclude the ones from the original year
selectDates <- subset(mudbanks, mudbanks$pos == q &
mudbanks$coastDist > -1 & !(mudbanks$DATE_ACQUIRED %in%
nonOutliers$DATE_ACQUIRED))$DATE_ACQUIRED
# get nearest date (excluding dates outside limit)
nearestDate <- selectDates[1:length(selectDates) ==
which.min(replace(abs(as.Date(selectDates) - reference_date),
abs(as.Date(selectDates) - reference_date)>year_limit*356, NA))]
if(length(nearestDate) == 0){break}
index_nearest <- which(as.Date(as.character(mudbanks$DATE_ACQUIRED)) == nearestDate &
mudbanks$pos == q &
mudbanks$coastDist > -1 &
mudbanks$coast_outlier == 1)
# update annual subset
nonOutliers <- rbind(nonOutliers, mudbanks[index_nearest, ] )
maxAttemp = maxAttemp + 1
}
# only fit a line if there is a least 5 valid observations.
if(nrow(nonOutliers) < 5){
m_per_year <- NA
} else {
# calculate linear fit
lm.out <- lm(nonOutliers$coastDist~as.numeric(as.Date(nonOutliers$DATE_ACQUIRED)))
# intercept <-lm.out$coefficients[1]
slope <- round(lm.out$coefficients[2], 5) # change per unit of x (=days)
m_per_year <- slope*365
}
# update all slope values from the original years (incl. coastdist -1 and outliers)
mudbanks$slope[which(mudbanks$year_col == i &
mudbanks$pos == q)] <- as.numeric(m_per_year)
mudbanks$coastObs[which(mudbanks$year_col == i &
mudbanks$pos == q)] <- as.numeric(nrow(nonOutliers))
}
# remove temp variables
suppressWarnings(remove(subsets_annual, outliers,nonOutliers, reference_date,
maxAttemp, lm.out, slope, m_per_year))
end <- Sys.time()
dif<- difftime(end, start, "mins")
print(paste0(as.Date(i) ,' in ', round(dif,1), ' in ', units(dif)))
# plot(as.Date(nonOutliers$DATE_ACQUIRED), nonOutliers$coastDist,
#   main = paste0(q), xlab = paste0(i), ylab = 'coastline position',
#   ylim=c(min(nonOutliers$coastDist)-30,max(nonOutliers$coastDist)+30),
#   xlim=c(min(as.Date(nonOutliers$DATE_ACQUIRED)),
#         max(as.Date(nonOutliers$DATE_ACQUIRED))))
# points(as.Date(outliers$DATE_ACQUIRED), outliers$coastDist, col = 'red')
# abline(lm(nonOutliers$coastDist~as.numeric(as.Date(nonOutliers$DATE_ACQUIRED))),lty = 2)
# text(min(as.Date(subsets_annual$DATE_ACQUIRED)) + 90,
#      max(subsets_annual$coastDist) + 25, paste0('slope = ', m_per_year, ' meter'))
}
# set initial value
mudbanks$locf <- mudbanks$coastDist
# if coastDist NA or coast observation is an outlier;
indices <- unique(which(is.na(mudbanks$coastDist) | mudbanks$coast_outlier == 0))
for(ind in indices){
# ind<-indices[1200]
data_entry <- mudbanks[ind, ]
# select all accepted observations from the same transect
pos_subset <- subset(mudbanks, mudbanks$pos == data_entry$pos &
mudbanks$coast_outlier == 1 &
!is.na(mudbanks$coastDist))
# plot(pos_subset$DATE_ACQUIRED, pos_subset$locf)
# plot(pos_subset$DATE_ACQUIRED, pos_subset$coastDist, col = 'red')
if(nrow(pos_subset) > 0){ # if no observations; locf remains original observation (=NA)
# calculate date difference
dateDiff <- abs(as.Date(pos_subset$DATE_ACQUIRED) - as.Date(data_entry$DATE_ACQUIRED))
# find nearest date
dateDiff[dateDiff==0] <- max(dateDiff) # exclude the date of interest (dateDiff = 0)
minInd <- which.min(dateDiff)
nearest <- pos_subset[minInd,]
# fill locf in original data frame
mudbanks[row.names(mudbanks) == row.names(data_entry), 'locf'] <-
nearest$coastDist
}
}
#'
#' Coastline
#' - median distance from transect origin per year
#' -
#'
# order by pos
mudbanks<-mudbanks[order(mudbanks$pos),]
# calculate median coastal position
# grouped by pos, year and outlier
mudbanks <- mudbanks %>%
dplyr::group_by(pos, year_col, coast_outlier) %>%
dplyr::mutate(coast_median = median(coastDist, na.rm = T))
# set outlier groups to NA
# this is now prefered over filling NA with nearest values.
mudbanks$coast_median[mudbanks$coast_outlier == 0] <- NA
# key to indicate groups of years~pos
mudbanks$key <- with(rle(as.numeric(mudbanks$year_col)), rep(seq_along(lengths), lengths))
# # fill outliers (NA) with median coastal observation of that year
mudbanks <- mudbanks %>%
group_by(key) %>% # group by position & year
mutate(coast_median = Mode(coast_median)) %>%
ungroup() # remove group
#fill(coast_median) #%>%      # fill NA with group value ==> fill uses one down or one up and will still have NA's if next is NA
#'
#'  calculate for each pos, each year gain/loss compared to previous year
#'
mudbanks <- mudbanks %>%
group_by(pos) %>%           # group_by performs calculation per group
# arrange(pos) %>%              # for each pos calculate the difference compared to previous median observation
# calculate for each position the difference with previous
mutate(deltaCoast = coast_median - lag(coast_median)) %>%
mutate(deltaCoast = replace_na(deltaCoast, 0)) %>%        # NA corresponds to first obs at each transect, set it to 0
# make sure within each group the difference are all assigned the same value (max)
group_by(key) %>%
mutate(deltaCoast = ifelse(sign(deltaCoast[which.max(abs(deltaCoast))]) == 1,
max((deltaCoast), na.rm = F),
min((deltaCoast), na.rm = F))) %>%
ungroup()
if(exportCoasts){
for (year in unique(format(as.Date(uniqueDates), '%Y'))){
# year <- 2000
# print(year)
start_year <- as.Date(ISOdate(year, 1, 1))
end_year <- as.Date(ISOdate(year, 12, 31))
mudbanks_per_year <-subset(mudbanks,
as.Date(DATE_ACQUIRED) >= start_year &
as.Date(DATE_ACQUIRED) <= end_year)
mudbanks_per_year <- mudbanks_per_year %>%
dplyr::select(!c(x,y,
# SmoothedPeak, SmoothedPeakFract, axisDistAbs,
# axisDistSlope, endDrop, maxExtent,maxExtentIndex,
# meanMud, mudFract, mudFractAbs, mudFractSlope,
# peakCoordX, peakCoordY
))
write_csv(mudbanks_per_year, paste0(wd,"/data/processed/coastlines/", aoi,
'_', year, '_coastlines.csv'))
print( paste0(wd,"/data/processed/coastlines/", aoi,
'_', year, '_coastlines.csv'))
remove(mudbanks_per_year)
}
year
year
exportCoasts
mudbanks$coast_median[mudbanks$coast_outlier == 0]
mudbanks$key
if(exportCoasts){
for (year in unique(format(as.Date(uniqueDates), '%Y'))){
# year <- 2000
# print(year)
start_year <- as.Date(ISOdate(year, 1, 1))
end_year <- as.Date(ISOdate(year, 12, 31))
mudbanks_per_year <-subset(mudbanks,
as.Date(DATE_ACQUIRED) >= start_year &
as.Date(DATE_ACQUIRED) <= end_year)
mudbanks_per_year <- mudbanks_per_year %>%
dplyr::select(!c(x,y,
# SmoothedPeak, SmoothedPeakFract, axisDistAbs,
# axisDistSlope, endDrop, maxExtent,maxExtentIndex,
# meanMud, mudFract, mudFractAbs, mudFractSlope,
# peakCoordX, peakCoordY
))
write_csv(mudbanks_per_year, paste0(wd,"/data/processed/coastlines/", aoi,
'_', year, '_coastlines.csv'))
print( paste0(wd,"/data/processed/coastlines/", aoi,
'_', year, '_coastlines.csv'))
remove(mudbanks_per_year)
}
}
#
# # test simple 2d plot
twoD_pos <- 243000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 95000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 85000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
View(subset2d_for_testPlot)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
View(subset2d_for_testPlot)
unique(as.Date(subset2d_for_testPlot$year_col))+180
subset2d_for_testPlot$coast_median
#
# # test simple 2d plot
twoD_pos <- 83000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 80000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
subset2d_for_testPlot$coast_median
#
# # test simple 2d plot
twoD_pos <- 180000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 150000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 153000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 155000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 156000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
filtCollect <- collection$filterDate(as.character(as.Date(min(subset2d_for_testPlot$DATE_ACQUIRED))-1),
as.character(as.Date(max(subset2d_for_testPlot$DATE_ACQUIRED))+1))$
sort("CLOUDCOVER", TRUE)
dates <- ee_get_date_ic(filtCollect, time_end = FALSE)
Map$centerObject(filtCollect$first())
first <- Map$addLayer(filtCollect$first(), vizParams, paste0('landsat: ',i))
first + coast_spatial
#
# # test simple 2d plot
twoD_pos <- 95000#95000
subset2d_for_testPlot <- subset(mudbanks, pos == twoD_pos)
plot(as.Date(subset2d_for_testPlot$DATE_ACQUIRED), subset2d_for_testPlot$coastDist,
xlab="DATE_ACQUIRED", ylab="coastDist [m]",
main = paste0('coastline position: ',twoD_pos, ' [m]'), pch = 20)
lines(unique(as.Date(subset2d_for_testPlot$year_col))+180,
aggregate(subset2d_for_testPlot$coast_median, list(subset2d_for_testPlot$key), median)$x,
col = 'black', lty = 2)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coast_outlier == 0, ]$coastDist,
col = 'red',  pch = 20)
points(as.Date(subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$DATE_ACQUIRED),
subset2d_for_testPlot[subset2d_for_testPlot$coastX == -1, ]$locf, col = 'blue')
legend("right", legend=c("Observations", "median values", 'outliers', 'locf'),
col=c("black", "black", 'red', 'blue'), pch = c(20,NA,20,20) ,lty = c(0,2,0,0), cex=0.8)
coast_spatial <- sp_pnt_ee(subset2d_for_testPlot$coastX,
subset2d_for_testPlot$coastY, paste0('pos: ',twoD_pos),
"#d95f0e")
